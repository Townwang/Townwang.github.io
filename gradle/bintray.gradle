apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def artefact = properties.getProperty("bintray.pro_artefact")

def gitUrl = properties.getProperty("bintray.pro_git")
def proRepo = properties.getProperty("bintray.pro_repo")

def siteUrl = properties.getProperty("bintray.pro_site_url")
def proName = properties.getProperty("bintray.pro_name")
def proDescription = properties.getProperty("bintray.pro_description")


def develop_id = properties.getProperty("bintray.pro_develop_id")
def develop_name = properties.getProperty("bintray.pro_develop_name")
def develop_email = properties.getProperty("bintray.pro_develop_email")

def license_name = properties.getProperty("bintray.pro_license_name")
def license_url = properties.getProperty("bintray.pro_license_url")
def license_version = properties.getProperty("bintray.pro_license_version")

version = properties.getProperty("bintray.pro_version")

group = properties.getProperty("bintray.group")
install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar'
                name proName
                description proDescription
                url siteUrl
                licenses {
                    license {
                        name license_name
                        url license_url
                    }
                }
                developers {
                    developer {
                        id develop_id
                        name develop_name
                        email develop_email
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = proRepo
        name = artefact
        userOrg = user
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = [license_version]
        publish = true
    }

}